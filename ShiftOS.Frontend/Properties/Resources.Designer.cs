//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ShiftOS.Frontend.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ShiftOS.Frontend.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap cursor_9x_pointer {
            get {
                object obj = ResourceManager.GetObject("cursor_9x_pointer", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /* ShiftOS Exploits data file
        /// *
        /// * This file contains information about all exploits in the game&apos;s campaign.
        /// *
        /// */
        ///
        ///[
        ///	{
        ///		FriendlyName: &quot;FTP Exploit&quot;,
        ///		ExploitName: &quot;ftpwn&quot;
        ///		EffectiveAgainstPort: &quot;FileServer&quot;,
        ///	}
        ///].
        /// </summary>
        public static string Exploits {
            get {
                return ResourceManager.GetString("Exploits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /* ShiftOS hackables data file
        /// *
        /// * This file contains information about all hackable systems in the game&apos;s campaign.
        /// *
        /// */
        ///
        ///[
        ///	{
        ///		SystemName: &quot;shiftsyndicate_main&quot;,
        ///		FriendlyName: &quot;ShiftSyndicate file server&quot;,
        ///		Password: &quot;h0ldy0urc0l0ur&quot;,
        ///		PasswordHint: &quot;Prepare to hold your colour...&quot;,
        ///		WelcomeMessage: &quot;Don&apos;t make fun of SpamSyndicate web design.&quot;,
        ///		FirewallStrength: 1,
        ///		LootRarity: 1,
        ///		LootAmount: 4,
        ///		ConnectionTimeoutLevel: 4,
        ///		SystemType: &quot;FileServer, SSHServer&quot;,
        ///
        ///	}
        ///].
        /// </summary>
        public static string Hackables {
            get {
                return ResourceManager.GetString("Hackables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap justthes {
            get {
                object obj = ResourceManager.GetObject("justthes", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //Loot information table
        ///
        ///[].
        /// </summary>
        public static string LootInfo {
            get {
                return ResourceManager.GetString("LootInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /* ShiftOS Payloads data file
        /// *
        /// * This file contains information about all payloads in the game&apos;s campaign.
        /// *
        /// */
        ///
        ///[
        ///	{
        ///		FriendlyName: &quot;FTP Payload&quot;,
        ///		PayloadName: &quot;ftpull&quot;
        ///		EffectiveAgainstFirewall: 1,
        ///		EffectiveAgainst: &quot;FileServer&quot;,
        ///	}
        ///].
        /// </summary>
        public static string Payloads {
            get {
                return ResourceManager.GetString("Payloads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /* ShiftOS Ports data file
        /// *
        /// * This file contains information about all ports in the game&apos;s campaign.
        /// *
        /// */
        ///
        ///[
        ///	{
        ///		FriendlyName: &quot;SMTP mailserver (unencrypted)&quot;,
        ///		AttachTo: &quot;EmailServer&quot;
        ///		Value: 25,
        ///		Name: &quot;smtp&quot;,
        ///	},
        ///	{
        ///		FriendlyName: &quot;File Transfer Protocol&quot;,
        ///		AttachTo: &quot;FileServer&quot;
        ///		Value: 21,
        ///		Name: &quot;ftp&quot;,
        ///	},
        ///	{
        ///		FriendlyName: &quot;ShiftSSH server&quot;,
        ///		AttachTo: &quot;SSHServer&quot;
        ///		Value: 22,
        ///		Name: &quot;ssh&quot;,
        ///	},
        ///	{
        ///		FriendlyName: &quot;MySQL server&quot;,
        ///		AttachTo: &quot;Database&quot;
        ///		Val [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Ports {
            get {
                return ResourceManager.GetString("Ports", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [].
        /// </summary>
        public static string Shiftorium {
            get {
                return ResourceManager.GetString("Shiftorium", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///	&quot;{SUBMIT}&quot;:&quot;Bestätigen&quot;,
        ///
        ///&quot;{TERMINAL_TUTORIAL_1}&quot;:&quot;Wilkommen zum ShiftOS Terminal. Hier wirst du die meiste Zeit in ShiftOS verbringen.
        ///  
        ///Eine kurze Erklärung wie du das Terminal benutzt lautet wiefolgt. Du kannst das command &apos;sos.help&apos; benutzen um eine Liste aller commands aufzurufen. Schreib es
        ///einfach in das Terminal und drücke &lt;enter&gt; um alle commands anzuzeigen.
        /// 
        ///Commands können mit argumenten versehen werden, indem du ein key-value Paar in einem {} Block hinter dem command angibst. Zum Be [rest of string was truncated]&quot;;.
        /// </summary>
        public static string strings_de {
            get {
                return ResourceManager.GetString("strings_de", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        /// * ShiftOS English Language Pack
        /// *
        /// * This is the default language pack distributed within the game.
        /// */
        ///
        ///{
        ///  //General strings
        ///  //These strings can be used anywhere in the UI where language context isn&apos;t necessary.
        ///  &quot;{GEN_PROGRAMS}&quot;: &quot;Programs&quot;,
        ///  &quot;{GEN_COMMANDS}&quot;: &quot;Commands&quot;,
        ///  &quot;{GEN_OBJECTIVES}&quot;: &quot;Objectives&quot;,
        ///  &quot;{GEN_CURRENTPROCESSES}&quot;: &quot;Current processes&quot;,
        ///  &quot;{GEN_WELCOME}&quot;: &quot;Welcome to ShiftOS.&quot;,
        ///  &quot;{GEN_SYSTEMNAME}&quot;: &quot;System name&quot;,
        ///  &quot;{GEN_PASSWORD}&quot;: &quot;Password&quot;,
        ///  &quot;{GEN_LPROMPT [rest of string was truncated]&quot;;.
        /// </summary>
        public static string strings_en {
            get {
                return ResourceManager.GetString("strings_en", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        /// * ShiftOS French Language Pack
        /// *
        /// * This is a default language pack distributed within the game.
        /// */
        ///
        ///{
        ///  //General strings
        ///  //These strings can be used anywhere in the UI where language context isn&apos;t necessary.
        ///  &quot;{GEN_PROGRAMS}&quot;: &quot;Les programmes&quot;,
        ///  &quot;{GEN_COMMANDS}&quot;: &quot;Les ordres&quot;,
        ///  &quot;{GEN_OBJECTIVES}&quot;: &quot;Les objectifs&quot;,
        ///  &quot;{GEN_CURRENTPROCESSES}&quot;: &quot;Les procèdures actuelles&quot;,
        ///  &quot;{GEN_WELCOME}&quot;: &quot;Bienvenue au ShiftOS.&quot;,
        ///  &quot;{GEN_SYSTEMNAME}&quot;: &quot;Nom de système&quot;,
        ///  &quot;{GEN_PASSWORD}&quot;: &quot;Mot de  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string strings_fr {
            get {
                return ResourceManager.GetString("strings_fr", resourceCulture);
            }
        }
    }
}
